name: Prepare Release

on:
  workflow_dispatch:

jobs:
  prepare:
    name: Prepare release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Git
        run: |
          git config --global user.email "gems@sofwarellc.com"
          git config --global user.name "SOFware"
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: ruby
      
      - name: Get current version
        id: current_version
        run: |
          current_version=$(ruby -r ./lib/discharger/version.rb -e 'puts Discharger::VERSION')
          echo "current_version=$current_version" >> $GITHUB_OUTPUT
      
      - name: Disable bundler deployment mode
        run: |
          bundle config unset deployment
          bundle config unset frozen

      - name: Prepare release with Reissue
        run: |
          bundle exec rake reissue
      
      - name: Build gem
        run: |
          bundle exec rake build:checksum
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: release/v${{ steps.current_version.outputs.current_version }}
          base: main
          title: "Release v${{ steps.current_version.outputs.current_version }}"
          body: |
            ## üöÄ Release Preparation
            
            This PR finalizes the release for version ${{ steps.current_version.outputs.current_version }}.
            
            ### Changes Made
            - ‚úÖ CHANGELOG.md finalized with release date
            - ‚úÖ Gem built successfully with checksum
            - ‚úÖ Release branch created automatically by Reissue
            
            ### Next Steps
            1. Review the changelog to ensure all changes are documented
            2. Verify the version is correct
            3. Add the `approved-release` label to this PR
            4. Merge the PR

            Once merged:
            - The release workflow will automatically publish to RubyGems.org
            - A new version will be created in version.rb
            - The changelog will be prepared for the next release
            
            ---
            
            ‚ö†Ô∏è **Important**: Only add the `approved-release` label when ready to publish!
          labels: |
            release
            automated