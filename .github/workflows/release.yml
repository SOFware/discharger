on:
  workflow_dispatch:
    inputs:
      version_segment:
        description: 'Version segment to bump (patch, minor, major)'
        required: false
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  release:
    name: Release gem to RubyGems.org
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Required for Trusted Publishing
      contents: write
      pull-requests: write
      issues: write

    steps:
      # Set up
      - name: Setup Git
        run: |
          git config --global user.email "gems@sofwarellc.com"
          git config --global user.name "SOFware"
      - uses: actions/checkout@v5
        with:
          ref: main
          fetch-depth: 0
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: ruby

      # Configure bundler for modifications
      - name: Configure Bundler
        run: |
          bundle config set frozen false

      # Finalize changelog and build gem with checksum
      - name: Finalize and build gem with checksum
        run: bundle exec rake build:checksum

      # Get current version before release
      - name: Get current version
        id: current_version
        run: |
          current_version=$(ruby -r ./lib/discharger/version.rb -e 'puts Discharger::VERSION')
          echo "current_version=$current_version" >> $GITHUB_OUTPUT

      # Commit finalization changes
      - name: Commit finalization changes
        run: |
          git add -A
          git commit -m "Finalize version ${{ steps.current_version.outputs.current_version }} for release

          ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

          Co-Authored-By: Claude <noreply@anthropic.com>"

      # Release gem using official RubyGems action
      - name: Release gem to RubyGems
        uses: rubygems/release-gem@v1

      # Get the new version after automatic bump
      - name: Get new version
        id: new_version
        run: |
          new_version=$(ruby -r ./lib/discharger/version.rb -e 'puts Discharger::VERSION')
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      # Create PR for next version
      - name: Create Pull Request for next version
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-version-${{ steps.new_version.outputs.new_version }}
          base: main
          commit-message: "Bump version to ${{ steps.new_version.outputs.new_version }}"
          title: "Bump version to ${{ steps.new_version.outputs.new_version }}"
          body: |
            ## ðŸ”„ Post-Release Version Bump

            This PR prepares the codebase for development of version ${{ steps.new_version.outputs.new_version }}.

            ### Changes Made
            - âœ… Version bumped to ${{ steps.new_version.outputs.new_version }}
            - âœ… CHANGELOG.md prepared with new Unreleased section
            - âœ… Gemfile.lock updated with new version
            - âœ… All dependencies resolved via bundle install

            ### Next Steps
            1. Review the version bump
            2. Merge this PR to continue development

            All future commits will be tracked under version ${{ steps.new_version.outputs.new_version }}.
          labels: |
            dependencies
            automated
