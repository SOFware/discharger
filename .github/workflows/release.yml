on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  push:
    name: Push gem to RubyGems.org
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'approved-release')

    permissions:
      id-token: write  # Required for Trusted Publishing
      contents: write
      pull-requests: write
      issues: write

    steps:
      # Set up
      - name: Setup Git
        run: |
          git config --global user.email "gems@sofwarellc.com"
          git config --global user.name "SOFware"
      - uses: actions/checkout@v5
        with:
          ref: main
          fetch-depth: 0
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: ruby

      # Configure bundler for modifications
      - name: Configure Bundler
        run: |
          bundle config set frozen false

      # Configure Trusted Publishing
      - name: Configure Trusted Publishing
        uses: rubygems/configure-rubygems-credentials@v1

      # Release gem (will automatically bump version via reissue)
      - name: Release gem to RubyGems
        run: |
          # The release task will:
          # 1. Push gem to RubyGems
          # 2. Automatically run rake reissue (with default patch segment)
          # Since GITHUB_ACTIONS is set, reissue won't commit
          bundle exec rake release

      # Get the new version
      - name: Get new version
        id: new_version
        run: |
          new_version=$(ruby -r ./lib/discharger/version.rb -e 'puts Discharger::VERSION')
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      # Create PR for next version
      - name: Create Pull Request for next version
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-version-${{ steps.new_version.outputs.new_version }}
          base: main
          commit-message: "Bump version to ${{ steps.new_version.outputs.new_version }}"
          title: "Bump version to ${{ steps.new_version.outputs.new_version }}"
          body: |
            ## ðŸ”„ Post-Release Version Bump

            This PR prepares the codebase for development of version ${{ steps.new_version.outputs.new_version }}.

            ### Changes Made
            - âœ… Version bumped to ${{ steps.new_version.outputs.new_version }}
            - âœ… CHANGELOG.md prepared with new Unreleased section
            - âœ… Gemfile.lock updated with new version
            - âœ… All dependencies resolved via bundle install

            ### Next Steps
            1. Review the version bump
            2. Merge this PR to continue development

            All future commits will be tracked under version ${{ steps.new_version.outputs.new_version }}.
          labels: |
            dependencies
            automated
